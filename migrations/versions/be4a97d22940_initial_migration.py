"""Initial migration

Revision ID: be4a97d22940
Revises: 
Create Date: 2025-04-29 13:18:06.795025

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'be4a97d22940'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    op.create_table('shared_dataset',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('dataset_id', sa.INTEGER(), nullable=False),
    sa.Column('shared_with_id', sa.INTEGER(), nullable=False),
    sa.Column('share_date', sa.DATETIME(), nullable=True),
    sa.Column('access_token', sa.VARCHAR(length=64), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['shared_with_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token')
    )

    op.create_table('users',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('username', sa.VARCHAR(length=80), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('password_hash', sa.VARCHAR(length=128), nullable=True),
    sa.Column('created_at', sa.DateTime()),
    sa.Column('last_login', sa.DateTime()),   
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )


    op.create_table('datasets',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=100), nullable=False),
    sa.Column('description', sa.TEXT(), nullable=True),
    sa.Column('filename', sa.VARCHAR(length=255), nullable=False),
    sa.Column('upload_date', sa.DATETIME(), nullable=True),
    sa.Column('record_count', sa.Integer(), nullable=True),
    sa.Column('date_range_start', sa.Date(), nullable=True),
    sa.Column('date_range_end', sa.Date(), nullable=True),

    sa.Column('user_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('audit_logs',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('action', sa.String(length=100), nullable=False),
    sa.Column('target_type', sa.String(length=50), nullable=True),
    sa.Column('target_id', sa.Integer(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=True),
    sa.Column('details', sa.Text(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )

    op.create_table('password_reset_tokens',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Integer(), nullable=False),
        sa.Column('token', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), nullable=True),
        sa.Column('expires_at', sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['users.id']),
        sa.PrimaryKeyConstraint('id')
    )

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('password_reset_tokens', schema=None) as batch_op:
        batch_op.add_column(sa.Column('used', sa.BOOLEAN(), nullable=True))
        batch_op.alter_column('expires_at',
               existing_type=sa.DATETIME(),
               nullable=False)
        batch_op.alter_column('token',
               existing_type=sa.VARCHAR(length=255),
               nullable=False)

    op.create_table('shared_dataset',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('dataset_id', sa.INTEGER(), nullable=False),
    sa.Column('shared_with_id', sa.INTEGER(), nullable=False),
    sa.Column('share_date', sa.DATETIME(), nullable=True),
    sa.Column('access_token', sa.VARCHAR(length=64), nullable=False),
    sa.ForeignKeyConstraint(['dataset_id'], ['datasets.id'], ),
    sa.ForeignKeyConstraint(['shared_with_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('access_token')
    )
    op.drop_table('audit_logs')
    # ### end Alembic commands ###
